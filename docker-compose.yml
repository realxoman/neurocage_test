version: '3.3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./static/:/static/
      - ./media/:/media/
      - /var/log/dezh-back/nginx/:/var/log/nginx/
      - ./deploy/nginx:/etc/nginx/conf.d
    depends_on:
      - web
  web:
    build: .
    container_name: web
    restart: always
    command: >
      sh -c "
        python manage.py compilemessages;
        python manage.py collectstatic --noinput;
        gunicorn --bind=0.0.0.0:8080 --timeout=90 --reload config.wsgi:application;
      "
    volumes:
      - .:/app/dezhdoor/
      - ./static/:/static
      - ./media/:/app/dezhdoor/media/
      - /var/log/dezh-back:/var/log/dezh-back
      - cachedata:/cachec
    ports:
      - 8080:8080
    env_file:
      - .env

  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - ./media/:/media/
      - dbdata:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery-worker:
    build: .
    command:
      [
        "celery",
        "-A",
        "_base",
        "worker",
        "-l",
        "info",
        "-E",
        "--concurrency=10",
      ]
    volumes:
      - .:/app/webelopers/
    env_file:
      - .env
    depends_on:
      - rabbit
    links:
      - rabbit
      
  rabbit:
    hostname: rabbit
    image: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"


volumes:
  dbdata:
  cachedata:
